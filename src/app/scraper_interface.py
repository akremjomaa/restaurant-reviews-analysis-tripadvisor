import streamlit as st
import subprocess
import sys
from pathlib import Path

def check_existing_data():
    """
    V√©rifie si les fichiers de donn√©es existent d√©j√†.
    """
    urls_file = Path("data/raw/top_restaurants_urls.json")
    data_file = Path("data/raw/top_restaurants.json")
    return urls_file.exists(), data_file.exists()

def run_scraper():
    """
    Interface Streamlit pour ex√©cuter le script de scraping et afficher les logs dans une zone d√©di√©e.
    """
    st.title("üîç Scraping des Restaurants")
    st.markdown("### üïµÔ∏è Suivi des √âtapes de Scraping")

    urls_file_exists, data_file_exists = check_existing_data()

    if urls_file_exists and data_file_exists:
        st.warning("Les fichiers de donn√©es existent d√©j√†.")
        if not st.checkbox("Souhaitez-vous relancer le scraping ?", value=False):
            st.success("Le scraping n'a pas √©t√© relanc√©. Vous pouvez explorer les donn√©es existantes.")
            return

    if st.button("D√©marrer le Scraping"):
        st.info("Le scraping a commenc√©, veuillez patienter...")

        python_executable = sys.executable
        process = subprocess.Popen(
            [python_executable, "src/scraping/scraper.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
        )

        stdout, stderr = process.communicate()

        st.markdown("### üìú Logs du Scraping")
        log_area = st.empty()
        logs = stdout.strip().split("\n") if stdout else ["Aucun log disponible."]
        for log in logs:
            log_area.text(log)

        if process.returncode == 0:
            st.success("üéâ Scraping termin√© avec succ√®s !")
        else:
            st.error("‚ùå Une erreur est survenue pendant le scraping.")
            error_logs = stderr.strip().split("\n") if stderr else ["Aucune erreur sp√©cifique."]
            st.markdown("### ‚ö†Ô∏è Logs des Erreurs")
            st.error("\n".join(error_logs))
