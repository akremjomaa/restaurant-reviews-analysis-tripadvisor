import os
import sqlite3
import streamlit as st
import subprocess


def database_exists(db_path="restaurants.db"):
    """
    V√©rifie si la base de donn√©es SQLite existe et contient des tables.
    :param db_path: Chemin vers le fichier SQLite.
    :return: True si la base de donn√©es existe et contient des tables, sinon False.
    """
    if not os.path.exists(db_path):
        return False
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' LIMIT 1;")
        exists = cursor.fetchone() is not None
        conn.close()
        return exists
    except sqlite3.Error:
        return False


def run_create_warehouse():
    """
    Interface pour ex√©cuter le script de cr√©ation de l'entrep√¥t de donn√©es.
    """
    st.header("üèóÔ∏è Cr√©er l'Entrep√¥t de Donn√©es")

    db_path = "restaurants.db"

    if database_exists(db_path):
        st.warning("‚ö†Ô∏è L'entrep√¥t de donn√©es existe d√©j√†. Voulez-vous le recr√©er ?")
        if st.button("Recr√©er la base de donn√©es"):
            try:
                result = subprocess.run(
                    ["python", "src/database/create_warehouse.py"],
                    capture_output=True,
                    text=True,
                    check=True,
                )
                st.success("Base de donn√©es recr√©√©e et aliment√©e avec succ√®s !")
                st.text(result.stdout)
            except subprocess.CalledProcessError as e:
                st.error("Erreur lors de l'ex√©cution du script de cr√©ation de la base de donn√©es.")
                st.text(e.stderr)
    else:
        if st.button("Cr√©er la base de donn√©es"):
            try:
                result = subprocess.run(
                    ["python", "src/database/create_warehouse.py"],
                    capture_output=True,
                    text=True,
                    check=True,
                )
                st.success("Base de donn√©es cr√©√©e et aliment√©e avec succ√®s !")
                st.text(result.stdout)
            except subprocess.CalledProcessError as e:
                st.error("Erreur lors de l'ex√©cution du script de cr√©ation de la base de donn√©es.")
                st.text(e.stderr)
